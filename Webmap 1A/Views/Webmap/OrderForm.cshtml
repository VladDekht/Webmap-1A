@{
    ViewBag.Title = "OrderForm";
}
@model  Webmap_1A.Models.Order


<div class="dropdown-menu  col-md-4" id="form-menu">
    <div class="order-form-body">
        <div class=" container">


            @using (Html.BeginForm("orders", "api/me",FormMethod.Post))
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <h6>Caller Type</h6>
                            @Html.EnumDropDownListFor(m => m.Caller.Type, new { @class = "custom-select" })
                        </div>
                        <div class="col-md-3">
                            <h6>Caller Name</h6>
                            @Html.TextBoxFor(m => m.Caller.Name, new { @class = "my-form-control" })
                            @Html.ValidationMessageFor(m => m.Caller.Name)
                        </div>
                        <div class="col-md-3">
                            <h6>Caller Phone Number</h6>
                            @Html.TextBoxFor(m => m.Caller.PhoneNum, new { @class = "my-form-control" })
                            @Html.ValidationMessageFor(m => m.Caller.PhoneNum)
                        </div>
                        <div class="col-md-2" id="driver-container">
                            <h6>Driver Name</h6>
                            @Html.TextBoxFor(m => m.CurrentWrecker.CurrentDriver.Name, new { @class = "my-form-control", id = "driver-plate-box", style = "display: none;" })
                            @Html.ValidationMessageFor(m => m.CurrentWrecker.CurrentDriver.Name)
                        </div>
                        <div class="col-md-2 " id="wrecker-plate-div">
                            <h6>Plate</h6>
                            @Html.TextBoxFor(m => m.CurrentWrecker.PlateNum, new { @class = "my-form-control", id = "wrecker-plate-box", style = "display: none;" })
                            @Html.ValidationMessageFor(m => m.CurrentWrecker.PlateNum)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 container">
                        <h4 id="h4-address-from">
                            Address to Pick From
                            <button type="button" class="show-address-button btn-sm glyphicon glyphicon-search" id="show-button-from"></button>
                        </h4>
                        @Html.TextBoxFor(m => m.PickFromAddress.Lat, new { style = "display: none", id = "lat_from" })
                        @Html.TextBoxFor(m => m.PickFromAddress.Lng, new { style = "display: none", id = "lng_from" })
                        <div id="locationField">
                            <input class="my-form-control" id="autocompleteFrom" @*onfocus="geolocate()"*@ placeholder="Enter your address" type="text">

                        </div>
                        <div class="col-md-3" style="display:flex">
                            <div style="display: block">
                                <label style="margin-right:10px">City</label>
                            </div>
                            <div style="display: block">
                                @Html.TextBoxFor(m => m.PickFromAddress.City, new { @class = "pick my-form-control", id = "locality_from" })
                            </div>
                        </div>
                        <div class="col-md-6" style="display:flex">
                            <label style="margin-right:10px">Street</label>
                            @Html.TextBoxFor(m => m.PickFromAddress.Street, new { @class = "pick my-form-control", id = "route_from", style = "width: 150%; border-radius: 4px 0 0 4px" })
                            @Html.TextBoxFor(m => m.PickFromAddress.HouseNum, new { @class = "pick my-form-control", id = "street_number_from", style = "width: 50%; border-radius: 0 4px 4px 0" })
                        </div>
                        <div class="col-md-3" style="display:flex">
                            <label style="margin-right:10px">ZIP</label>
                            @Html.TextBoxFor(m => m.PickFromAddress.Zip, new { @class = "my-form-control", id = "postal_code_from" })
                            @*@Html.ValidationMessageFor(m => m.PickFromAddress.Zip)*@
                        </div>
                        <div style="display: block; color: red;">
                            <div>
                                @Html.ValidationMessageFor(m => m.PickFromAddress.City)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(m => m.PickFromAddress.Street)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(m => m.PickFromAddress.HouseNum)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 container">
                        <h4 id="h4-address-from">
                            Address to Take To
                            <button type="button" class="show-address-button btn-sm glyphicon glyphicon-search" id="show-button-to"></button>
                        </h4>
                        @Html.TextBoxFor(m => m.TakeToAddress.Lat, new { style = "display: none", id = "lat_to" })
                        @Html.TextBoxFor(m => m.TakeToAddress.Lng, new { style = "display: none", id = "lng_to" })
                        <div id="locationField">
                            <input class="my-form-control" id="autocompleteTo" @*onfocus="geolocate()"*@ placeholder="Enter your address" type="text">

                        </div>
                        <div class="col-md-3" style="display:flex">
                            <div style="display: block">
                                <label style="margin-right:10px">City</label>
                            </div>
                            <div style="display: block">
                                @Html.TextBoxFor(m => m.TakeToAddress.City, new { @class = "pick my-form-control", id = "locality_to" })

                            </div>
                        </div>
                        <div class="col-md-6" style="display:flex">
                            <label style="margin-right:10px">Street</label>
                            @Html.TextBoxFor(m => m.TakeToAddress.Street, new { @class = "pick my-form-control", id = "route_to", style = "width: 150%; border-radius: 4px 0 0 4px" })

                            @Html.TextBoxFor(m => m.TakeToAddress.HouseNum, new { @class = "pick my-form-control", id = "street_number_to", style = "width: 50%; border-radius: 0 4px 4px 0" })

                        </div>

                        <div class="col-md-3" style="display:flex">
                            <label style="margin-right:10px">ZIP</label>
                            @Html.TextBoxFor(m => m.TakeToAddress.Zip, new { @class = "my-form-control", id = "postal_code_to" })
                            @*@Html.ValidationMessageFor(m => m.TakeToAddress.Zip)*@
                        </div>
                        <div style="display: block; color: red;">
                            <div>
                                @Html.ValidationMessageFor(m => m.TakeToAddress.City)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(m => m.TakeToAddress.Street)
                            </div>
                            <div>
                                @Html.ValidationMessageFor(m => m.TakeToAddress.HouseNum)
                            </div>
                        </div>
                        <button type="button" id="draw-route-button" class="btn btn-sm btn-secondary" style="margin-left:40%;margin-top: 10px;">Draw route</button>
                        <button type="button" id="clear-route-button" class="btn btn-sm btn-secondary" style="margin-top: 10px;">Clear route</button>
                    </div>
                    

                </div>
                <div class="row">
                    <div class="col-md-12 container">
                        <h4>Other Information</h4>
                        @Html.TextBoxFor(m => m.OtherInfo, new { @class = "my-form-control" })
                        @*@Html.ValidationMessageFor(m => m.OtherInfo)*@
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <br />
                        <input type="submit" class="btn btn-primary" id="submit-button" value="Submit customer data" />
                        <input type="reset" class="btn btn-secondary" id="reset-button" value="Reset data" />
                        @*<button type="button" class="btn btn-secondary">Close</button>*@
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="dropdown-menu col-md-4 list-group" id="address-list-container">

</div>



@*var address = document.getElementById('city-to').value + " " + document.getElementById('street-to').value + " " + document.getElementById('house-num-to').value;
    alert(document.getElementById('city-to').value + " " + document.getElementById('street-to').value + " " + document.getElementById('house-num-to').value);
    geocoder = new google.maps.Geocoder();
    geocoder.geocode({ 'address': address }, function (results, status) {
        if (status == 'OK') {
            map.setCenter(results[0].geometry.location);
            var marker = new google.maps.Marker({
                map: map,
                position: results[0].geometry.location
            });
        } else {
            alert('Geocode was not successful for the following reason: ' + status);
        }
    });*@

@*<div class="modal fade" id="newOrder" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h5 class="modal-title" id="exampleModalLongTitle">Creating New Order</h5>
                </div>
                <div class="modal-body">
                    <div class="row">

                        @using (Html.BeginForm("orders", "api/me", FormMethod.Post))
                        {
                            <div class="col-md-4">
                                @Html.AntiForgeryToken()
                                <div class="caller">
                                    <h3>Caller</h3>
                                    <div>
                                        <h5>Caller Type</h5>
                                        @Html.EnumDropDownListFor(m => m.Caller.Type, new { @class = "custom-select" })
                                    </div>
                                    <div>
                                        <h5>Caller Name</h5>
                                        @Html.TextBoxFor(m => m.Caller.Name, new { @class = "form-width form-control" })
                                        @Html.ValidationMessageFor(m => m.Caller.Name)
                                    </div>
                                    <div>
                                        <h5>Caller Phone Number</h5>
                                        @Html.TextBoxFor(m => m.Caller.PhoneNum, new { @class = "form-width form-control" })
                                        @Html.ValidationMessageFor(m => m.Caller.PhoneNum)
                                    </div>
                                </div>
                                <h3>Wrecker</h3>
                                <div class="wrecker">
                                    <div>
                                        <h5>Wrecker Plate Number</h5>
                                        @Html.TextBoxFor(m => m.CurrentWrecker.PlateNum, new { @class = "form-width form-control" })
                                        @Html.ValidationMessageFor(m => m.CurrentWrecker.PlateNum)
                                    </div>
                                    <div>
                                        <h5>Wrecker Driver Name</h5>
                                        @Html.TextBoxFor(m => m.CurrentWrecker.CurrentDriver.Name, new { @class = "form-width form-control" })
                                        @Html.ValidationMessageFor(m => m.CurrentWrecker.CurrentDriver.Name)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <h3>Address to Pick From</h3>
                                <div class="address-to-pick">
                                    <div>
                                        <h5>City</h5>
                                        @Html.TextBoxFor(m => m.PickFromAddress.City, new { @class = "form-width form-control" })
                                        @Html.ValidationMessageFor(m => m.PickFromAddress.City)
                                    </div>
                                    <div>
                                        <h5>Street</h5>
                                        @Html.TextBoxFor(m => m.PickFromAddress.Street, new { @class = "form-width form-control" })
                                        @Html.ValidationMessageFor(m => m.PickFromAddress.Street)
                                    </div>
                                    <div>
                                        <h5>House Number</h5>
                                        @Html.TextBoxFor(m => m.PickFromAddress.HouseNum, new { @class = "form-width form-control" })
                                        @Html.ValidationMessageFor(m => m.PickFromAddress.HouseNum)
                                    </div>
                                    <div>
                                        <h5>Zip</h5>
                                        @Html.TextBoxFor(m => m.PickFromAddress.Zip, new { @class = "form-width form-control" })
                                    </div>
                                </div>
                                <h3>Other Information</h3>
                                <div class="other-info">
                                    @Html.TextBoxFor(m => m.OtherInfo,new { @class = "form-width form-control" })
                                    @Html.ValidationMessageFor(m => m.OtherInfo)
                                    <br /><br />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <h3>Address to Take To</h3>
                                <div class="address-to-take-to">
                                    <div>
                                        <h5>City</h5>
                                        @Html.TextBoxFor(m => m.TakeToAddress.City, new { @class = "form-width form-control", id = "city-to" })
                                        @Html.ValidationMessageFor(m => m.TakeToAddress.City)
                                    </div>
                                    <div>
                                        <h5>Street</h5>
                                        @Html.TextBoxFor(m => m.TakeToAddress.Street, new { @class = "form-width form-control", id = "street-to" })
                                        @Html.ValidationMessageFor(m => m.TakeToAddress.Street)
                                    </div>
                                    <div>
                                        <h5>House Number</h5>
                                        @Html.TextBoxFor(m => m.TakeToAddress.HouseNum, new { @class = "form-width form-control", id = "house-num-to" })
                                        @Html.ValidationMessageFor(m => m.TakeToAddress.HouseNum)
                                    </div>
                                    <div>
                                        <h5>Zip</h5>
                                        @Html.TextBoxFor(m => m.TakeToAddress.Zip, new { @class = "form-width form-control", id="zip-to" })
                                    </div>
                                </div>

                            </div>
                            <div>
                                <input type="submit" class="btn btn-primary" id="submit-button" value="Submit customer data" />
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>

                        }

                    </div>
                </div>
            </div>
        </div>
    </div>*@
